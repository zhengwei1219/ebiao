<!Doctype html>
<html  xmlns="http://www.w3.org/1999/xhtml" xmlns:fc>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
		<title></title>
		<STYLE type="text/css"> 
		    @import url(../../fceform/css/dj.css);
	        
	    </STYLE>
		<script src="../../fceform/js/MicrosoftAjax.js"></script>
		<script src="../../fceform/js/fcpub.js"></script>
		<script src="../../fceform/htc/dataset.js"></script>
		<script src="../../fceform/htc/webgrid.js"></script>
		<script src="../../fceform/htc/fc_code.js"></script>
		<script src="../../fceform/js/fcdataset.js"></script>
		<script src="../../fceform/js/fcwebgrid.js"></script>
		<script src="../../fceform/js/fcbasecont.js"></script>
		<script src="../../fceform/js/fcrundj.js"></script>
		<script src="../../fceform/js/xtree.js"></script>
        
		<style> 
		    .btn { BORDER-BOTTOM:#8B8B7A 2px solid; border-right:#8B8B7A 2px solid; }
		    
	    </style>
		<script type="text/javascript">
			var commonParam = {
				left : 10,
				top: 39, //窗口位置top ，width，height，left
				width : 700,
				height: 400,
				center: 0, //=1; (默认时是 居中,如写了 left或top 则表示不居中)
				title: "资料选择", //窗口标题
				
				istree: 1, //(树控件可以单独用,或是和grid,radiolist,checkboxlist组合用,组合用时可以设置树控件的宽度)
				isgrid: 0, //1/0(是否有grid,默认是无.), 
 	  			islist : 1, //多选时为checkboxlist,否则是radiolist
 	  			isfind: 1, //(是否有模糊查找项)
 	  			findvalue: null, //模糊查找值
 	  			selectedvalue : null, //多选时,已选中的值.
 	  			cols: 3, //radiolist 的列数
 	  			datasource : null, //数据源名称
 	  			
 	  			hidefields : null,// 隐藏字段
 	  			ismultisel: 0, //是否多选
 	  			istreenewsql: 0, //是否是树控件的新格式的SQL语句
 	  			
 	  			idfieldname : null, //前一窗口的id字段名,用于按字段同名传递数据
 	  			textfieldname: null, //前一窗口的text字段名,用于按字段同名传递数据
 	  			
 	  			xml: null,
                
                pagesize : 50, //grid的页大小
 	  			gridcoltitle: null, //grid控件的各列的标题,是一个数组,写法: ["第一列名称","第二列名称","第三列名称"] ,需要和grid显示的列一一对应上.
 	  			gridcolwidth: null, //grid控件的各列列宽,是一个数组,写法: [80,100,70] ,需要和grid显示的列一一对应上.
 	  			treewidth: 200, //树控件的宽度
 	  			roottext: null, //树控件的根节点文本
 	  			treeNodeType: null, //要返回树控件的节点类型，它的值为：ef_tree_psm 
 	  			
 	  			obj: null, //用于修改的前一窗口控件对象,包含grid对象
 	  			
 	  			clicknodesql: "select semployeeid,semployeename from fcs_employee where sdeptid={单引号}{nodeIdValue}{单引号}", // 标识 {nodeIdValue} 用于取当前点击的树节点
 	  			sql: "select sdeptcode,sdeptname,sdeptid from FCS_DEPT where sdeptname !='' order by sdeptcode "   //查询sql   

 	        };
 	        var objPub = {
 	            sqlafter: null, //替换模糊查找串之后的SQL语句, 一般先为null;
 	            twoCont: 2, //两个控件之间间距
 	            top: 30,
 	            left:2,
 	            right:2,
 	            bottom:2
 	        }
 	        var win_dialogArguments = window.dialogArguments;
 	        if (typeof win_dialogArguments == "undefined") {
 	            if (!IsSpace(top.Dialog) && !IsSpace(top.Dialog.Arguments)) {
 	                win_dialogArguments = top.Dialog.Arguments;
 	            } 
 	        }
 	        commonParam = win_dialogArguments[0];
            
 	        var tree1;
 	        
 	        var sbAll = new Sys.StringBuilder(); //所有html串
 	        var sbTb = new Sys.StringBuilder(); //工具栏html串
 	        
 	        uf_linkCss();
 	        genToolbarStr();
 	        genControlStr();
 	        window.document.write(sbTb.toString());
 	        window.document.write(sbAll.toString());
 	        window.document.title = commonParam.title;

 	        var dsSel = null; 
 	        if($id("dsSel") != null) dsSel = new dataset("dsSel");

 	        var grid1 = null;
 	        if ($id("grid1") != null) {
 	            grid1 = new webgrid("grid1");
 	            grid1.fnInit();
 	        }
			function uf_linkCss() {
			    try {
			        fcpubdata.skins = win_dialogArguments[4].zkpub.skin;
			    } catch (ee) {
			        fcpubdata.skins = "blue"; 
			    }
			
				window.document.write('<LINK href="../../fceform/css/skins/' + fcpubdata.skins + '/style/efskin.css" type="text/css" rel="stylesheet">');     
				window.document.write( '<LINK href="../../fceform/css/efdesign.css" type="text/css" rel="stylesheet">');
				window.document.write('<LINK href="../../fceform/css/skins/' + fcpubdata.skins + '/style/Editor.css" type="text/css" rel="stylesheet">');
				if (commonParam.istree == 1) {
				    window.document.write('<LINK href="../../fceform/css/xtree.css" type="text/css" rel="stylesheet">');
				}			
            
            }
			
			

			 function genToolbarStr() {
			    var isOnlyTree = commonParam.isgrid != 1 && commonParam.islist != 1;
			    //工具栏按钮固定有:确定/取消/最大化/刷新
			    sbTb.append('<TABLE id="Toolbar" class="Toolbar" cellSpacing="0" cellPadding="0" border="0" style="LEFT:2px;POSITION:absolute;TOP:0px;"><TR>');

			    sbTb.append('<TD width="7px"><SPAN id="leftstart" class="leftstart"></SPAN></TD>')
			    sbTb.append('<TD width="70px"><button id="ok" class="cmdOk" onmouseover=\'this.className="cmdOk-over" \'onmouseout=\'this.className="cmdOk"\' onclick="clickOk()" title="确定" ></button></TD><TD width="70px"><button id="close" class="cmdClose" onmouseover=\'this.className="cmdClose-over"\'onmouseout=\'this.className="cmdClose"\' onclick="CloseBill();"  title="取消" ></button></TD><TD width="7px"><SPAN  class="menuline"></SPAN></TD><TD width="78px"><BUTTON id="cmdMaxWin" class="buttonmaxwin" onmouseover=\'this.className="buttonmaxwin-over" \'onmouseout=\'this.className="buttonmaxwin"\' onclick="maxwin()" title="最大化窗口" ></BUTTON></TD><TD width="69px"><BUTTON id="cmdRefresh" class="buttonrefresh" onmouseover=\'this.className="buttonrefresh-over" \'onmouseout=\'this.className="buttonrefresh"\' onclick="execRefresh()" title="刷新数据" style="WIDTH: 66px"></BUTTON>');
			    var positionLeft = 7 + 70 + 70 + 7 + 79 + 70;
			    //调试chrome时去掉下面这一行，
			    //if( (commonParam.ismultisel != 1 || isOnlyTree ) && commonParam.isgrid != 1 ) sbTb.append('&nbsp;');
			    sbTb.append('</TD>');
			    if (commonParam.ismultisel == 1 && isOnlyTree == false) {
			        sbTb.append('<TD width="7px"><SPAN class="menuline"></SPAN></TD><TD width="70px"><BUTTON id="cmdSelAll" class="buttonselall" onmouseover=\'this.className="buttonselall-over" \'onmouseout=\'this.className="buttonselall"\' onclick="selAll()" title="全部选中" style="WIDTH: 66px"></BUTTON></TD><TD width="79px"><BUTTON id="cmdNoSelAll" class="buttonnoselall" onmouseover=\'this.className="buttonnoselall-over" \'onmouseout=\'this.className="buttonnoselall"\' onclick="noSelAll()" title="取消全部选中" style="WIDTH: 75px"></BUTTON>');
			        if (commonParam.isgrid != 1) sbTb.append('&nbsp;');
			        sbTb.append('</TD>');
			        positionLeft += 7 + 70 + 79;
			    }
			    if (commonParam.isgrid == 1) {
			        sbTb.append('<TD width="7px"><SPAN  class="menuline"></SPAN></TD>');
			        sbTb.append('<TD width="24px"><INPUT id="firstpage" class="buttonfirstpage" onclick="movepage(1)" type="button" onmouseover=\'this.className="buttonfirstpage-over"\' onmouseout=\'this.className="buttonfirstpage"\'></TD>');
			        sbTb.append('<TD width="24px"><INPUT id="uppage" class="buttonuppage" onclick="movepage(2)" type="button" onmouseover=\'this.className="buttonuppage-over"\' onmouseout=\'this.className="buttonuppage"\'></TD>');
			        sbTb.append('<TD width="24px"><span style = "font-size: 14px;" id="pageno" >1/1</span></TD>');
			        sbTb.append('<TD width="24px"><INPUT id="downpage" class="buttondownpage" onclick="movepage(3)" type="button" onmouseover=\'this.className="buttondownpage-over"\'  onmouseout=\'this.className="buttondownpage"\'></TD>');
			        sbTb.append('<TD width="24px"><INPUT id="lastpage" class="buttonlastpage" onclick="movepage(4)" type="button" onmouseover=\'this.className="buttonlastpage-over"\'  onmouseout=\'this.className="buttonlastpage"\'></TD>');
					sbTb.append('<TD width="42px"><span style = "font-size: 12px;width:42px" id="pagesizelabel">页尺寸</span></TD><TD width="40px"><INPUT id="pagesize" class="buttonpageno" style="WIDTH: 35px" value="' + commonParam.pagesize + '" ></TD>');
					sbTb.append('<TD width="30px"> <span style = "font-size: 12px;width:28px" id="pagegotolabel">转到</span></TD><TD width="28px"><input id="pagegoto" type="text"  style="WIDTH: 25px;" value="1"  /></TD><TD width="10px"><span id="pagegoto1label" style = "font-size: 12px;">页</span>&nbsp;</TD>');
					positionLeft += 7 + 24 + 24 + 24 + 24 + 24 + 45 + 30 + 10 + 28 + 40;
	            }
	            sbTb.append('</TR></TABLE>');
	            sbTb.append('<span class="rightend" style="position:absolute;top:0px;width:8px;left:' + positionLeft + 'px;"></span>');
	            if (commonParam.isfind == 1) {
	                sbTb.append('<TABLE cellSpacing="0" cellPadding="0" style="LEFT:6px;POSITION:absolute;TOP:30px;"><TR><TD valign=middle><span id="lblFind" style="text-align:center;FONT-SIZE:12px;">模糊查找：</span>  </TD><TD><INPUT type="text"id="txtFind" style="width:222px"><TD></TR></TABLE>');
	            }
			}

			
			/**
            *根据用户传递的参数，生成（grid,tree,radiolist,checkboxlist）控件串
            **/
			function genControlStr() {
			    if (commonParam.isfind == 1) objPub.top = 55;    //如果有模糊查找控件上边距为55
			    var iHeight = commonParam.height - objPub.top - objPub.bottom;
			    
	            sbAll.append('<div id="SKbillsheet">');
	            if (commonParam.istree == 1) {
	                var isOnlyTree = commonParam.isgrid != 1 && commonParam.islist != 1;
	                sbAll.append('<div id="tree1" controltype="tree" ');
	                var sourcetype = 0;
	                if(IsSpace(commonParam.xml)){
	                    if (commonParam.istreenewsql == 1)
	                        sourcetype = 3;
	                    else
	                        sourcetype = 1;    
	                }
	                sbAll.append('sourcetype=' + sourcetype + ' ');
	                var sEvent = "";
	                if (isOnlyTree == false) sEvent = escape("tree1_onclick(Global.selectedItem.code)");

	                sbAll.append('clicknode="' + sEvent + '" ');
	                sbAll.append('opentb="_self" ');
	                sbAll.append('roottext="');
	                if(IsSpace(commonParam.roottext))
	                    sbAll.append('  ');
	                else
	                    sbAll.append(commonParam.roottext);
	                sbAll.append('" ');
	                sbAll.append('isAll="是" ');
	                sbAll.append('xml="' + commonParam.xml + '" ');
                    if(commonParam.ismultisel == 1 && isOnlyTree) sbAll.append('ischecked="是" ');


	                sbAll.append('style="OVERFLOW: auto;position:absolute;');
	                var iWidth = commonParam.width - objPub.left - objPub.right;
	                if (isOnlyTree == false) iWidth = commonParam.treewidth;
	                
	                sbAll.append('background-color:#ffffff; width:' + iWidth + 'px; height:' + iHeight + 'px; left:' + objPub.left + 'px; top:' + objPub.top + 'px; " ></div>');

	            }

	            if (commonParam.istree == 1 && isOnlyTree == false) objPub.left = objPub.left + commonParam.treewidth + objPub.twoCont;
	            var iWidth = commonParam.width - objPub.left - objPub.right;
	            

	            if (commonParam.isgrid == 1) {
	                sbAll.append('<fc:dataset id="dsSel" > </fc:dataset> <fc:webgrid id="grid1" dataset="dsSel" overflow="auto"  hideVscroll="是" hideHscroll="是" SetRowHeight="是" bodyrowheight="-1" bodyrows="-1" left="' + objPub.left + '" top="' + objPub.top + '" height="' + iHeight + '" width="' + iWidth + '" onDblClick="gridDblClick()"><table id="t" cellPadding="0" cellSpacing="0" frame="box" style="TABLE-LAYOUT: fixed;  FONT-SIZE: 12px;  LEFT: 0px;  POSITION: absolute;  TOP: 0px;  BORDER-COLLAPSE: collapse"><tr class="fcGridFirstRow"><td></td></tr></table></fc:webgrid></div>');
	            } else if (commonParam.islist == 1) {

	            sbAll.append('<div id="list1" style="BORDER-RIGHT: black 0px solid; BORDER-TOP: black 0px solid; LEFT:0px; OVERFLOW: auto; BORDER-LEFT: black 0px solid; WIDTH:' + iWidth + 'px; BORDER-BOTTOM: black 0px solid; POSITION: absolute; LEFT:' + objPub.left + 'px;TOP: ' + objPub.top + 'px; HEIGHT: ' + iHeight + 'px">');

	            } 
	            sbAll.append('</div>');
	        }
	        /**
	        * 树的节点点击事件
	        **/
	        function tree1_onclick(nodeIdValue) {
	            var sql = RepOpenSql(commonParam.clicknodesql);
	            objPub.sqlafter = RepStr(sql, "{nodeIdValue}", nodeIdValue);
	            if (commonParam.isgrid == 1) {
	                gridLoad();
	            }
	            if (commonParam.islist == 1) {
	                listLoad();
	            }
	        }
	        /**
	        *窗口最大化
	        **/
			function maxwin(){
			    window.dialogLeft = 0;
			    window.dialogTop = 0;
			    window.dialogWidth = screen.availWidth + "px";
			    window.dialogHeight = screen.availHeight + "px";
			}
			function selAll() {//判断全选按钮函数
			    if (commonParam.isgrid == 1) {
			        var l = dsSel.oDom.documentElement.childNodes.length - 1;
			        for (var i = 0; i < l; i++) {
			            //选择列在第0列.
			            NavJs.textContent(dsSel.oDom.documentElement.childNodes[i].childNodes[0],"是");
			            var oTd = grid1.tab.rows[i + 1].cells[1];
			            //oTd.className = "ef_run_grid_checked";
			            oTd.style.backgroundImage = "url(" + fcpubdata.path + "/fceform/images/ef_run_grid_checked.gif)";
			            oTd.style.backgroundRepeat = "no-repeat";

			        }
			    } else if (commonParam.islist == 1) {
			        var t = list1.children[0];
			        for (var i = 0; i < t.rows.length; i++) {
			            for (var j = 0; j < t.rows[i].cells.length; j++) {
			                t.rows[i].cells[j].childNodes[0].checked = true;
			            }
			        }
			    } 
			}
			function noSelAll() {//判断不全选按钮函数
			    if (commonParam.isgrid == 1) {
			        var l = dsSel.oDom.documentElement.childNodes.length - 1;
			        for (var i = 0; i < l; i++) {
			            //选择列在第0列.
			            NavJs.textContent(dsSel.oDom.documentElement.childNodes[i].childNodes[0], "否");
			            var oTd = grid1.tab.rows[i + 1].cells[1];
			            //oTd.className = "ef_run_grid_uncheck";
			            oTd.style.backgroundImage = "url(" + fcpubdata.path + "/fceform/images/ef_run_grid_uncheck.gif)";
			            oTd.style.backgroundRepeat = "no-repeat";

			        }
			    } else if (commonParam.islist == 1) {
			        var t = list1.children[0];
			        for (var i = 0; i < t.rows.length; i++) {
			            for (var j = 0; j < t.rows[i].cells.length; j++) {
			                t.rows[i].cells[j].childNodes[0].checked = false;
			            }
			        }
			    } 
			}
			/**
			* 翻页
			*@param ipos =1,2,3,4 表示移到头,上,下,尾
			**/
			function movepage(ipos) {
			    var dsSel = $obj("dsSel");
			    var iPageNo = dsSel.PageNo;
			    var iPageCount = dsSel.PageCount;
			    if (iPageNo < 1) iPageNo = 1;
			    if (iPageCount < 1) iPageCount = 1;

			    if (ipos == 1) {
			        iPageNo = 1;
			    } else if (ipos == 2) {
			        iPageNo--;
			    } else if (ipos == 3) {
			        iPageNo++;
			    } else if (ipos == 4) {
			        iPageNo = iPageCount;
				}
				if (iPageNo < 1) iPageNo = 1;
				if (iPageNo > iPageCount) iPageNo = iPageCount;
				$id("pagegoto").value = iPageNo;  //把当前页号赋给跳转页
				gridLoad();
            }
			/**
			* 执行刷新
			**/
			function execRefresh() {
			    var findValue = "";
			    if ($id("txtFind") == null) {
			        if (IsSpace(commonParam.findvalue) == false) findValue = commonParam.findvalue;
			    } else {
			        findValue = $id("txtFind").value;
			    }

			    objPub.sqlafter = RepOpenSql(commonParam.sql, findValue);

			    if (commonParam.istree == 1) {
			        
			        $id("tree1").innerHTML = "";
			        var oTree = $id("tree1");
			        var sqlTmp = commonParam.sql
			        TreeRefresh(oTree, sqlTmp);
			        //隐藏根节点，my add 2013-04-08 
			        if (IsSpace(commonParam.roottext)) TreeRootNodeHide(oTree, "none");
			        
			        objPub.sqlafter = RepOpenSql(commonParam.clicknodesql, findValue);
			        if (commonParam.isgrid == 1) {
			            gridLoad();
			        } else if (commonParam.islist == 1) {
			            listLoad();
			        }
			    } else {
			        if (commonParam.isgrid == 1) {
    			        gridLoad();
			        } else if (commonParam.islist == 1) {
	    		        listLoad();
			        } 
			    }			    
			}

			/**
			*grid 装载
			**/
			function gridLoad() {
			    var dsSel = $obj("dsSel");
			    var grid1 = $obj("grid1");
			    if (IsSpace(commonParam.datasource) == false) dsSel.datasourceName = commonParam.datasource;

			    var ipagesize = $id("pagesize").value;
			    ipagesize = parseInt(ipagesize, 10);
			    if (isNaN(ipagesize)) {
			        alert("页尺寸必须是整数!");
			        return;
			    }
			    var ipagegoto = $id("pagegoto").value;
			    ipagegoto = parseInt(ipagegoto, 10);
			    if (isNaN(ipagegoto)) {
			        alert("跳转页数必须是整数!");
			        return;
			    }
			    if (ipagegoto < 1) ipagegoto = 1;

			    dsSel.PageSize = ipagesize;
			    dsSel.PageNo = ipagegoto;
			    dsSel.HideField = commonParam.hidefields;

			    if (commonParam.ismultisel == 1) {
			        addCheckBoxCol(grid1, objPub.sqlafter,gridRunAfter);
			    } else {

			        dsSel.Open(objPub.sqlafter, '是', gridRunAfter);
			    
    			}
    		}
    		function gridRunAfter() {
    		    var dsSel = $obj("dsSel");
    		    var grid1 = $obj("grid1");
    		    //更新列宽
    		    if (IsSpace(commonParam.gridcolwidth) == false) {
    		        var i = 1;
    		        if (commonParam.ismultisel == 1) i = 2;
    		        var oGroup = NavJs.child(grid1.tab, "colgroup", 0);
    		        for (var j = 0; j + i < oGroup.childNodes.length && j < commonParam.gridcolwidth.length; j++) {
    		            NavJs.child(oGroup,"col",j + i).style.width = commonParam.gridcolwidth[j];
    		        }
    		    }
    		    //更新列标题
    		    if (IsSpace(commonParam.gridcoltitle) == false) {
    		        var i = 1;
    		        if (commonParam.ismultisel == 1) i = 2;
    		        for (var j = 0; j + i < grid1.tab.rows[0].cells.length && j < commonParam.gridcoltitle.length; j++) {
    		            grid1.tab.rows[0].cells[j + i].innerText = commonParam.gridcoltitle[j];
    		        }
    		    }
    			
    			var iPageCount = dsSel.PageCount; if (iPageCount < 1) iPageCount = 1;
    			var iPageNo = dsSel.PageNo; if (iPageNo < 1) iPageNo = 1;
    			pageno.innerText = iPageNo + '/' + iPageCount;

    			var ipagegoto = $id("pagegoto").value;
    			ipagegoto = parseInt(ipagegoto, 10);
    			if (ipagegoto > iPageCount && dsSel.PageSize > 0) alert('转到页数不要大于总页数,这会造成查不到记录!');
    			
    			if (commonParam.isgrid == 1 && commonParam.obj.getAttribute("controltype") != "grid") {
    			    var colNo = 1;
    			    if (IsSpace(commonParam.idfieldname) == false) colNo = dsSel.FieldNameToNo(commonParam.idfieldname);
    			    setDsMultiSelValue(dsSel, colNo, commonParam.selectedvalue);
    			    dsSel.dset_cont();

    			}
    			
    	    }
			/**
			*checkboxlist 装载
			**/
			function listLoad() {
			    var list1 = $id("list1");
			    if (IsSpace(commonParam.datasource) == false) list1.setAttribute("datasourceName",commonParam.datasource);
			    list1.rows = commonParam.cols;
			    if (commonParam.ismultisel == 1)
			        DivCheckBoxInitLoad(list1, objPub.sqlafter);
			    else
			        DivRadioInitLoad(list1, objPub.sqlafter);

			}
			/**
			*grid 双击多选时调用它
			**/
			function gridDblClick() {
			    if (commonParam.ismultisel != 1) {
			        clickOk();
			    }
			}

			function window_onload() {
			    if ($id("txtFind") != null) $id("txtFind").value = commonParam.findvalue;
			    execRefresh();

                //在多选时,自动处于选中状态.			    
			    if (commonParam.ismultisel == 1 && IsSpace(commonParam.selectedvalue) == false) {
			        if (commonParam.istree == 1 && commonParam.isgrid != 1 && commonParam.islist != 1) { //仅树多选
			            
			            TreeSetMultiValue($id("tree1"), commonParam.selectedvalue);
			        }else if(commonParam.islist == 1){
			            SetDivCheckBoxValue($id("list1"), commonParam.selectedvalue);
			        } 
			    }
			    $id("ok").focus();
			}

			function form_onkeydown() {
			    var event = NavJs.getEvent();
			    if (event.keyCode == 13) {		//回车键
			        execRefresh();
			    }
			}
			function window_onresize() {
			    var oWinSize = getClientSize();
			    var winWidth = oWinSize.width; //document.body.clientWidth;
			    //alert("winWidth="+winWidth)
			    var winHeight = oWinSize.height; //document.body.clientHeight;
			    var iHeight = winHeight - objPub.top - objPub.bottom;
			    var iWidth = winWidth - objPub.left - objPub.right;
			    //alert(objPub.left)
			    //alert("iWidth="+iWidth)
			    if (commonParam.istree == 1 ) {
			        var isOnlyTree = commonParam.isgrid != 1 && commonParam.islist != 1;
			        var oTree = $id("tree1");
			        oTree.style.height = iHeight + "px";
			        if (isOnlyTree) {
			            oTree.style.width = iWidth + "px";
			        }
			    }
			    var grid1 = $obj("grid1");
			    var list1 = $id("list1");
			    if (commonParam.isgrid == 1) {
			        grid1.height = iHeight;
			        grid1.fnPutheight(iHeight);
			        grid1.width = iWidth;
			        grid1.fnPutwidth(iWidth);
			    }
			    if (commonParam.islist == 1 && $id("list1") != null) {
			        list1.style.height = iHeight;
			        list1.style.width = iWidth;
			    }
			}
			function clickOk() {
			    objPub.sRet = "";
			    objPub.oDs = commonParam.dsobj;
			    objPub.isGridCont = commonParam.obj.getAttribute("controltype") == "grid";
			    var dsSel = $obj("dsSel");
			    
			    if (commonParam.isgrid == 1) {
			        
			        if (commonParam.ismultisel == 1) {
			            if (objPub.isGridCont) {
			                //过滤掉重复ID的选中行，2013-06-07

			                var boolSel = copydatasetsel(dsSel, objPub.oDs, true, "不重复");
			                if (boolSel) objPub.sRet = "ok";

			            } else {
			            //alert("表格多选时无法返回值到上一窗口的非表格控件上!");
			            //return;

			                if (IsSpace(objPub.oDs)) {
			                    var colNo = 1;    //取第一列的选中值.
			                    if (IsSpace(commonParam.textFieldName) == false) colNo = dsSel.FieldNameToNo(commonParam.textFieldName);
			                    objPub.sRet = getDsMultiSelValue(dsSel, colNo, true);
			                } else {
			                    for (var i = 0; i < dsSel.FieldCount; i++) {
			                        var s1 = dsSel.Field(i).FieldName;
			                        if (objPub.oDs.isFieldName(s1)) objPub.oDs.Field(s1).Value = getDsMultiSelValue(dsSel, i, true); ;

			                    }
			                    objPub.oDs.fset_cont1();
			                    objPub.sRet = "ok";			            
			                } 
			            }

			        } else {
			        
			            if (objPub.isGridCont) {
			                copydataset(dsSel, objPub.oDs);
			                objPub.oDs.bEdit = true;
			                objPub.oDs.Update("不检查");

			                objPub.oDs.fset_cont();
			                commonParam.obj.hide(); //RefreshEdit() 2011-07-04 
			                if (commonParam.obj.Row == commonParam.obj.Rows - 1) {
			                    commonParam.obj.EndRowState = "edit"
			                }

			            } else if (IsSpace(objPub.oDs)) { //不通过字段同名传递时,固定返回第一个字段的值
                        
			            objPub.sRet = dsSel.Field(0).Value;

			            } else {
			            
			                copydataset(dsSel, objPub.oDs);
			                objPub.oDs.fset_cont1();
			            }       
			        }
			    }
			    objPub.sbId = new Sys.StringBuilder();
			    objPub.sbText = new Sys.StringBuilder();
			    objPub.isIdFieldName = IsSpace(commonParam.idfieldname);
			    objPub.isExit = false;
			    objPub.isFirst = true;
			    
			    if (commonParam.islist == 1 && $id("list1") != null) {
	                var t = NavJs.child($id("list1"),"table",0);
	                for (var i = 0; i < t.rows.length; i++) {
	                    if (objPub.isExit) break;
	                    for (var j = 0; j < t.rows[i].cells.length; j++) {
	                        var subNode = NavJs.xmlChild(t.rows[i].cells[j], 0);
	                        if (subNode.checked == false) continue;
	                        if (actionSub(subNode.getAttribute("text"), subNode.value) == false) break;
		                }

		            }
			    }

			    if (commonParam.istree == 1 && commonParam.isgrid != 1 && commonParam.islist != 1 && $id("tree1") != null) { //单纯的树控件
			        if (commonParam.ismultisel == 1) {
			            var arr = TreeGetMultiValue($id("tree1"), commonParam.treeNodeType);
			            if (arr != null) {
			                for (var i = 0; i < arr.length; i++) {
			                    if (objPub.isExit) break;
			                    
			                    if (actionSub(arr[i].text, arr[i].code) == false) break;
			                }

			            }
			        } else {
			            if (Global.selectedItem != null) {
			                if (!IsSpace(commonParam.treeNodeType) && Global.selectedItem.icon != commonParam.treeNodeType) {
			                    alert("选择的树节点类型不对！");
			                    return;
			                }
			                actionSub(Global.selectedItem.text, Global.selectedItem.code);
			            }
			        }

			    }
			    if (commonParam.ismultisel == 1) {
			        if (objPub.sRet != "ok") {
			            alert("请至少选中一个不重复的值后再试!");
			            return;
			        }
			        if (objPub.isGridCont == false && commonParam.isgrid != 1) {
			            if (objPub.isIdFieldName == false) {
			                var sTmpId = objPub.sbId.toString();
			                sTmpId = sTmpId.substring(0, sTmpId.length - 1);

			                if (IsSpace(objPub.oDs) == false) objPub.oDs.Field(commonParam.idfieldname).Value = sTmpId;
			            }
			            var sTmp = objPub.sbText.toString();
			            sTmp = sTmp.substring(0, sTmp.length - 1);
			            if (IsSpace(objPub.oDs) == false) {
			                if (IsSpace(commonParam.textfieldname) == false) {
			                    objPub.oDs.Field(commonParam.textfieldname).Value = sTmp;
			                    objPub.oDs.fset_cont1();
			                }
			            } else { //不通过字段同名传递时,固定返回text字段的值
			                objPub.sRet = { text : sTmp, id : sTmpId }; //改为返回json对象，2013-06-26
			            }

			        }
			    } else {
			        if (objPub.isExit == false && commonParam.isgrid != 1) {
			            alert("请选中一项后再试!");
			            return;
			        }

			    }

			    window.returnValue = objPub.sRet;
			    //alert(window.returnValue);
			    CloseBill();
                
			    function actionSub(textValue,idValue) {
                    if (objPub.isGridCont) {
                        if (commonParam.ismultisel == 1) {
                            if (objPub.isFirst == false) objPub.oDs.Append();

                            if (objPub.isIdFieldName == false) objPub.oDs.Field(commonParam.idfieldname).Value = idValue;
                            objPub.oDs.Field(commonParam.textfieldname).Value = textValue;

                            objPub.oDs.Update("不检查");
                            objPub.sRet = "ok";
                            objPub.isFirst = false;
                        } else {
                        if (objPub.isIdFieldName == false) objPub.oDs.Field(commonParam.idfieldname).Value = idValue;
                            objPub.oDs.Field(commonParam.textfieldname).Value = textValue; 
                            objPub.oDs.fset_cont();
                            objPub.isExit = true;
                            return false;
                        }
                    } else {
                        if (commonParam.ismultisel == 1) {
                            if (objPub.isIdFieldName == false) objPub.sbId.append(idValue + ",");
                            objPub.sbText.append(textValue + ",");
                            objPub.sRet = "ok";
                        } else if (IsSpace(objPub.oDs)) { //不通过字段同名传递时,固定返回text字段的值
                            objPub.sRet = { text: textValue, id: idValue }; //改为返回json对象，2013-06-26
                            objPub.isExit = true;
                            return false;
                            
                        } else {
                            if (objPub.isIdFieldName == false) objPub.oDs.Field(commonParam.idfieldname).Value = idValue;
                            objPub.oDs.Field(commonParam.textfieldname).Value = textValue;
                            objPub.oDs.fset_cont1();
                            objPub.isExit = true;
                            return false;
                        }
                    }
                    return true;
			    
			    }
			    
			}
		</script>
	</head>
	<body onload="window_onload()" onresize="window_onresize()" onkeydown="form_onkeydown()" style="margin:0px;background-color:white;">
	</body>
</html>
