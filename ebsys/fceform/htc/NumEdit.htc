
/**
*@date:2005-04-22
*@author:刘浩
*最后修改时间:2005-08-29
**/

<public:component>
<ATTACH EVENT="ondocumentready" HANDLER="Init" />
<PUBLIC:PROPERTY ID="Text"  />

<PUBLIC:PROPERTY ID="fontsizeID" NAME="fontsize" PUT="fnPutfontsize" GET="fnGetfontsize"  />
<PUBLIC:PROPERTY ID="fontfamilyID" NAME="fontfamily" PUT="fnPutfontfamily" GET="fnGetfontfamily"  />
<PUBLIC:PROPERTY ID="fontstyleID" NAME="fontstyle" PUT="fnPutfontstyle" GET="fnGetfontstyle"  />
<PUBLIC:PROPERTY ID="backgroundColorID" NAME="backgroundColor" PUT="fnPutbackgroundColor" GET="fnGetbackgroundColor"  />
<PUBLIC:PROPERTY ID="colorID" NAME="color" PUT="fnPutcolor" GET="fnGetcolor"  />
<PUBLIC:PROPERTY ID="fontweightID" NAME="fontweight" PUT="fnPutfontweight" GET="fnGetfontweight"  />
<PUBLIC:PROPERTY Name="ParentPos"/>  //控制控件的坐标
<PUBLIC:PROPERTY ID="txtID" NAME="txt" GET="fnGettxt"  />


<PUBLIC:PROPERTY ID="alignID" NAME="textalign" PUT="fnPutalign" GET="fnGetalign"  />   //对齐方式
<public:property ID="valueID" NAME="value" PUT="fnPutNumeditValue" GET="fnGetNumeditValue">
<public:property NAME="Min" PUT="fnPutNumeditMin" /> //最小值
<public:property NAME="Max" PUT="fnPutNumeditMax" /> //最大值
<public:property NAME="NextNum" PUT="fnPutNextMin" />     //加减值
<public:property id="disabledID" name="enabled" PUT="fnPutdisabled" />   //只读
<public:property NAME="display" PUT="fnputvisible">

<PUBLIC:EVENT NAME="onchange" ID="onchangeID">

<script language="javascript">

/************/
var Numedit ;            //文本框值
var upButton;            //上按钮
var downButton;          //下按钮
var Min = 0 ;			 // 最小值 
var Max = 32000;		 //最大值
var NextNum = 1 ;         //加减值



var malign = "right" ;    //对齐方式
var mfontsize = "12px";     //字体大小
var mfontfamily = "宋体";
var mfontstyle = "normal";
var mbackgroundColor = "";
var mcolor = "black";
var mfontweight = "bold";
var sdisplay = "block" ;
var enabled = "否" ;
/**
字体大小、颜色、style
**/
function fnPutfontsize(vValue) {
	mfontsize=vValue;
	fontsizeID.fireChange();

	
}
function fnGetfontsize() {
	return mfontsize;
}
function fnputvisible(vValue) {
	sdisplay=vValue ;
	return sdisplay;
}
function fnPutfontstyle(vValue) {
	mfontstyle=vValue;
	fontstyleID.fireChange();

}

function fnGetfontstyle() {
	return mfontstyle;
}
function fnPutfontfamily(vValue) {
	mfontfamily=vValue;
	fontfamilyID.fireChange();

}
function fnGetfontfamily() {
	return mfontfamily;
}
function fnPutbackgroundColor(vValue) {
	mbackgroundColor=vValue;
	backgroundColorID.fireChange();

}
//获取表格中的值,赋给文本框
function fnGettxt(){
	return Numedit;
}
var svalue=""
function fnGetNumeditValue() {
	try{
		svalue = Numedit.value;
	}catch(e){}
	return svalue ;
}
function fnPutNumeditValue(vValue) {
	svalue = vValue
	try{
		Numedit.value = vValue;
	}catch(e){}
	valueID.fireChange();
	//return vValue;
}
function fnGetbackgroundColor() {
	return mbackgroundColor;
}
function fnPutcolor(vValue) {
	mcolor=vValue;
	colorID.fireChange();
	
}
function fnGetcolor() {
	return mcolor;
}
function fnPutfontweight(vValue) {
	mfontweight=vValue;
	fontweightID.fireChange();
} 
function fnGetfontweight() {
	return mfontweight;
}
/**
*控件的对齐方式 
**/
function fnPutalign(vValue) {
	malign = vValue;
	alignID.fireChange();

} 
function fnGetalign() {
	return malign;
}

/**
*是否活动
**/
function fnPutdisabled(vValue)
{
	var o = element.id;
	try{	
	enabled = vValue ;
	if(typeof Numedit != "undefined") {
		if(enabled=="否"){
			Numedit.disabled = true;
			upButton.disabled = true;
			downButton.disabled = true ;
		}else {
			Numedit.removeAttribute("disabled");
			upButton.removeAttribute("disabled");
			downButton.removeAttribute("disabled");
		}
	}
	}catch(e){}


	disabledID.fireChange();
}

/**
*加减值
**/
function fnPutNextMin(vValue) {
	try{
	NextNum = vValue ;
	Numedit.NextNum = NexMin ;
	}catch(e){}
}

/**
*最大值
**/
function fnPutNumeditMax(vValue) {
	try{
		Max = vValue ;
		Numedit.Max = Max;
	}catch(e){}
}

/**
*最小值
**/
function fnPutNumeditMin(vValue) {
	try{
		Min = vValue ;
		Numedit.Min = Min;
	}catch(e){}
}

//检查最大值和最小值是否合法！
function Max_Min() {
	if(parseInt(Numedit.value) < Min ){
		Numedit.value = Min ;
	}
	if(parseInt(Numedit.value) > Max) {
		Numedit.value = Max ;
	}
	/*if(IsFloat(Numedit.value)){
		alert("请填写数字！")；
		return ;
	}*/
	if(isNaN(parseInt(Numedit.value)) ){
		Numedit.value = "" ;
	}
    onchangeID.fire();
}

//减一
function Numedit_down() {
	if (parseInt(Numedit.value) > Min)
	{
		if(parseInt(Numedit.value) - parseInt(NextNum) > Min ) {
			Numedit.value = parseInt(Numedit.value) - parseInt(NextNum) ;
		}else{
			Numedit.value = Min;
		}
	}else{
		Numedit.value = parseInt(Min) ;
	}
	    onchangeID.fire();

}

//加一
function Numedit_up() {
	if (parseInt(Numedit.value) < Max)
	{
		if(parseInt(Numedit.value) + parseInt(NextNum) < Max ) {
			Numedit.value = parseInt(Numedit.value) + parseInt(NextNum) ;
		}else{
			Numedit.value = Max;
		}
	}else{
		if(Numedit.value == "") {
			Numedit.value = parseInt(Min);
		}else{
			Numedit.value = parseInt(Max);
		}
	}
	    onchangeID.fire();

}

/**
*失去焦点
**/
function Button_onblur() {
	upButton.blur() ;
	downButton.blur() ;
}

/**
*初始化函数
**/
function Init() {
	
	var divWidth = element.style.width;
	var divLeft = "" ;  //div控件的left坐标
	var divHeight = parseInt(element.style.height) ;   //div控件的高度
	var iWidthButton = 14;    //按钮的宽度
	var iHeightButton = 10 ;   //按钮的高度
	var iHeight = parseInt(divHeight);  //文本框的高度
	var downTop = "";  //down按钮的top坐标
	var divTop = "" ;

	//计算控件的位置
	if(element.style.position == "static" ) {
		var len = divWidth.length ;
		if(len != "" || typeof len != "undefined") {
			var s2 = element.style.width.substring(len-1,len);
			
		}
		if(s2 == "%") {
			var tmpW = parentNode.offsetWidth;
			var txtWidth = (100 * ((tmpW * parseInt(divWidth) /100) - 14)/tmpW) + "%";   //文本框中Width
			var mButtonWidth = 14;  //按钮的width
			ButtonLeft = parseInt(element.offsetWidth) + parseInt(getAbsLeft(element)) -14  ;  //按钮的left坐标
			divTop = getAbsTop(element);   //控件的高度
			downTop = parseInt(divTop) + 11 ;   //下边按钮的高度
			divLeft = getAbsLeft(element) ;   //控件的left坐标
		}else{
			//px为单位
			txtWidth = divWidth ;
			mButtonWidth = "14";
			if(ParentPos == "相对"){
				downTop = parseInt(divTop) + 11 ;
				divLeft = parseInt(element.style.left);
			}else{
				divLeft = getAbsLeft(element);
				divTop = getAbsTop(element);

			}
			ButtonLeft =  parseInt(element.offsetWidth) + parseInt(getAbsLeft(element)) ;//-14//parseInt(element.style.left) ;
			
			downTop = parseInt(divTop) + 11 ;
		}
	}else{
		//if(element.style.position == "absolute") {
			//绝对坐标
			//放在div中
			txtWidth = parseInt(divWidth) - 14 ;
			//以div的坐标为准
			divTop = 0;//parseInt(element.style.top) ;
			downTop = divTop + 11 ;
			divLeft = 0 ;//parseInt(element.style.left);
			ButtonLeft = divLeft + txtWidth ;
			/*txtWidth = parseInt(divWidth) - 14;
			divTop = parseInt(element.style.top)
			downTop = parseInt(divTop) + 11 ;
			divLeft = parseInt(element.style.left);
			ButtonLeft = parseInt(divLeft) + parseInt(txtWidth)*/
		//}
	}
	
	var sdisabled = "" ;
	if(enabled == "是" ) sdisabled = " disabled " ;
	
	var sHtml = "" ;
	sHtml += "<input type='text' "+ sdisabled +" value='"+svalue+"' id=Numedit style='display:"+sdisplay+"; POSITION: absolute; width:"+txtWidth+"; left:"+divLeft+";  height:"+iHeight+"; top:"+divTop+"; TEXT-ALIGN:"+align+";font-size:"+mfontsize+"; font-style:"+mfontstyle+"; font-family:"+mfontfamily+"; background-color:"+mbackgroundColor+"; font-weight:"+mfontweight+" ; color:"+mcolor+";'>";
	sHtml += "<input type='button' "+ sdisabled +" id='upButton' style='display:"+sdisplay+";cursor:hand; position:absolute; border:0px; top:"+divTop+"; left:"+ButtonLeft+"; height:"+iHeightButton+"; width:"+iWidthButton+"; BACKGROUND-COLOR:white;BACKGROUND-IMAGE:url("+fcpubdata.path+"/fceform/images/ef_run_up.gif);'>";
	sHtml += "<input type='button' "+ sdisabled +" id='downButton' style='display:"+sdisplay+"; position: absolute; top:"+downTop+"; border:0px;cursor:hand; left:"+ButtonLeft+"; height:"+iHeightButton+"; width:"+iWidthButton+"; BACKGROUND-COLOR:white;BACKGROUND-IMAGE:url("+fcpubdata.path+"/fceform/images/ef_run_down.gif);' >";

	element.innerHTML = sHtml;
	element.children[0].attachEvent("onchange", Max_Min) ;
	element.children[1].attachEvent("onclick", Numedit_up) ;
	element.children[2].attachEvent("onclick", Numedit_down) ;
	element.children[1].attachEvent("onmouseup", Button_onblur) ;
	element.children[2].attachEvent("onmouseup", Button_onblur) ;
	element.children[0].attachEvent("onkeydown", fc_txt_onkeydown);
	Numedit = element.children[0] ;
	upButton = element.children[1] ;
	downButton = element.children[2] ;

	if(element.style.position == "static") {
		var len = divWidth.length ;
		if(len != "" || typeof len != "undefined") {
			var s2 = element.style.width.substring(len-1,len);
		}
		if(s2 == "%") {
			if(typeof Numedit!="undefined" ){
				Numedit.attachEvent( "onresize", buttononresize );
			}
		}
	}	
}

function buttononresize() {
	var tmpW = parentNode.offsetWidth ;

	var tmp1 = (tmpW * parseInt(element.width) /100) - 14 ;
	if( upButton.style.pixelLeft != tmp1 ) {
		Numedit.style.pixelWidth = tmp1;
		Numedit.style.pixelLeft = getAbsLeft(element);
		Numedit.style.pixelTop = getAbsTop(element);
		upButton.style.pixelLeft = tmp1 + getAbsLeft(element)  ;
		downButton.style.pixelLeft = tmp1 + getAbsLeft(element) ;
		upButton.style.pixelTop = getAbsTop(element);
		downButton.style.pixelTop = parseInt(upButton.style.pixelTop) + 11 ;
	}
}
function fc_txt_onkeydown() {
	var scode = event.keyCode ;
	if(scode == "40") {
		Numedit_down() ;
	}
	if(scode == "38") {
		Numedit_up();
	}
}

</script>
</public:coponent>